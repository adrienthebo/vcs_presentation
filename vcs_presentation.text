title: Version Control Systems
author: Adrien Thebo
copyright: Copyright 2012 Adrien Thebo, licensed under Creative Commons BY/NC/SA
duration: 120
code-engine: coderay

Version Control Systems
=======================

Making dumb mistakes faster, without fear
-----------------------------------------

![Coffee](./images/drink_coffee.jpg)

!SLIDE

Introduction
------------

What is Version Control?
========================

  * A Version Control System, or VCS, is a tool used to track changes to files
  * Allows you to manage code or documents as you work
    * Make changes in incremental steps
    * View changes
    * Revert errors
  * Greatly simplifies collaboration

Why Should You Care?
====================

  * Try out experimental ideas without destroying your code base
  * Resolve mistakes by switching to the last working copy
  * Find the change that introduced a bug
  * Have VCS merge your changes with classmates instead of by hand
  * Use VCS as a backup system!
    * "Wait, you **didn't** want that file deleted?"

Why Should You Care?
====================

  * Any sane developer uses VCS
    * Github
    * Gitorious
    * Mercurial
    * code.googte.com
    * Sourceforge
    * et cetera...
  * Version control systems are the life blood of open source
    * Reduces barrier to entry
    * Easier to manage contributions

Why Should You Care?
====================

In general, if you are writing more than a few lines of code and not using
version control...

**YOU ARE DOING IT WRONG.**

**PERIOD.**

!SLIDE

Background
----------

Before VCS
==========

  * Living dangerously!

<% code do %>
    vim really_complex_algorithm.c
<% end %>

*three hours later*

<% code do %>
    rm -rf *
<% end %>

Whoops.

Do It Yourself VCS
==================

Early implementations of version control was done by copying files

<% code do %>
    vim really_complex_algorithm.c
    cp really_complex_algorithm.c really_complex_algorithm.c.1
    vim really_complex_algorithm.c
    cp really_complex_algorithm.c really_complex_algorithm.c.2
    vim really_complex_algorithm.c
    cp really_complex_algorithm.c really_complex_algorithm.c.3
<% end %>

This wouldn't get tedious at all!

The beginning of VCS
====================

  * Initial idea of VCS came from engineering
  * Engineers would create blueprints, and save earlier revisions
  * If a version was not liked, it was trivial to roll back
  * Revision control was also applied in business, law
  * Any place where you may need to backtrack on a document, VCS will show up

Concerns with VCS
=================

  * Any VCS has to deal with some basic concerns
    * Merging changes
    * Locking files
    * Atomic commits
  * Each VCS handles these concerns differently

!SLIDE

A T!ur of Version Control Systems
---------------------------------


Source Code Control System (SCCS)
=================================

  * Arguably the first VCS system available
  * Developed by Bell Labs in 1972
    * For some comparison, C was written in 1972 at Bell Labs as well
  * SCCS was the dominant VCS until the advent of RCS
  * Generally considered obsolete, and only mentioned for historical purposes
  * Except for the storage method - still used today

[Wikipedia: Source Code Control System](http://en.wikipedia.org/wiki/Source_Code_Control_System)

Revision Control System (RCS)
=======================

Revision Control System (RCS)
  * Released in 1982
  * Created as an evolution of SCCS
  * Stored changes of files as a series of diffs
  * Very popular, still used today

[Wikipedia: Revision Control System](http://en.wikipedia.org/wiki/Revision_Control_System)
